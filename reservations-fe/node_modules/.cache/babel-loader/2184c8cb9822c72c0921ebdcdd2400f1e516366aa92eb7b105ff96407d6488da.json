{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !_ctx.authenticated ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"login-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.register && $options.register(...args))\n  }, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\")])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["_ctx","authenticated","_createElementBlock","key","class","onClick","_cache","args","$options","register","_createElementVNode","login","_createCommentVNode"],"sources":["E:\\ISQA 3900 - Web Application Development\\ISQA4900_Group3_Backend\\reservations-fe\\src\\components\\layout\\LoginButton.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-btn\" v-if=\"!authenticated\" @click=\"register\">\r\n    <button @click=\"login\">Login</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport router from '../../router';\r\nimport {APIService} from '@/http/ApIService';\r\nconst apiService = new APIService();\r\nexport default {\r\n  name: \"LoginButton\",\r\n  data: () => ({\r\n    authenticated: false,\r\n    dialog: false,\r\n    menu: [\r\n      {title: 'Home', url: \"/\"},\r\n      {title: 'Guests', url: \"/guest-list\"},\r\n    ]\r\n  }),\r\n  mounted() {\r\n    if (localStorage.getItem(\"isAuthenticated\") &&\r\n        JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\r\n      this.authenticated = true\r\n    } else {\r\n      this.authenticated = false\r\n    }\r\n    if (this.authenticated === true) {\r\n      apiService.getGuestList().then(response => {\r\n        this.authenticated = true;\r\n      }).catch(error => {\r\n        if (error.response.status === 401) {\r\n          localStorage.clear();\r\n          localStorage.setItem(\"isAuthenticated\", false);\r\n          this.authenticated = false;\r\n        }\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    getUser() {\r\n      if (localStorage.getItem(\"isAuthenticated\") &&\r\n          JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true\r\n      ) {\r\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\r\n      }\r\n    },\r\n    logout() {\r\n//clear local storage items and set authenticated to false\r\n      localStorage.clear();\r\n      localStorage.setItem(\"isAuthenticated\", false);\r\n      this.authenticated = false;\r\n      window.location = \"/\";\r\n    },\r\n    login() {\r\n      router.push(\"/auth\");\r\n    },\r\n    home() {\r\n      window.location = \"/\";\r\n    },\r\n    register() {\r\n      router.push(\"/register\");\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-btn button {\r\n  padding: 7px 30px;\r\n  border: #dcb324 1px solid;\r\n  text-transform: uppercase;\r\n  background-color: #d78f00;\r\n  color: #1c212d;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n}\r\n\r\n.login-btn button:hover {\r\n  background-color: #ffffff;\r\n  border: #d78f00 1px solid;\r\n}\r\n</style>"],"mappings":";;UACgCA,IAAA,CAAAC,aAAa,I,cAA3CC,mBAAA,CAEM;IAHRC,GAAA;IACOC,KAAK,EAAC,WAAW;IAAwBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;MAC3DG,mBAAA,CAAqC;IAA5BL,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,KAAA,IAAAH,QAAA,CAAAG,KAAA,IAAAJ,IAAA,CAAK;KAAE,OAAK,E,KAFhCK,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}