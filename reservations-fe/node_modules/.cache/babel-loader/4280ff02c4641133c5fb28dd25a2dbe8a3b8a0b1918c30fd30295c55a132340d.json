{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../../router';\nimport { APIService } from '@/http/ApIService';\nconst apiService = new APIService();\nexport default {\n  name: \"LoginButton\",\n  data: () => ({\n    authenticated: false,\n    dialog: false,\n    menu: [{\n      title: 'Home',\n      url: \"/\"\n    }, {\n      title: 'Guests',\n      url: \"/guest-list\"\n    }]\n  }),\n  mounted() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === true) {\n      apiService.getGuestList().then(response => {\n        this.authenticated = true;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          localStorage.setItem(\"isAuthenticated\", false);\n          this.authenticated = false;\n        }\n      });\n    }\n  },\n  methods: {\n    getUser() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n      }\n    },\n    logout() {\n      //clear local storage items and set authenticated to false\n      localStorage.clear();\n      localStorage.setItem(\"isAuthenticated\", false);\n      this.authenticated = false;\n      window.location = \"/\";\n    },\n    login() {\n      router.push(\"/auth\");\n    },\n    home() {\n      window.location = \"/\";\n    },\n    register() {\n      router.push(\"/register\");\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","authenticated","dialog","menu","title","url","mounted","localStorage","getItem","JSON","parse","getGuestList","then","response","catch","error","status","clear","setItem","methods","getUser","validUserName","logout","window","location","login","push","home","register"],"sources":["E:\\ISQA 3900 - Web Application Development\\ISQA4900_Group3_Backend\\reservations-fe\\src\\components\\layout\\LoginButton.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-btn\" v-if=\"!authenticated\" @click=\"register\">\r\n    <button @click=\"login\">Login</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport router from '../../router';\r\nimport {APIService} from '@/http/ApIService';\r\nconst apiService = new APIService();\r\nexport default {\r\n  name: \"LoginButton\",\r\n  data: () => ({\r\n    authenticated: false,\r\n    dialog: false,\r\n    menu: [\r\n      {title: 'Home', url: \"/\"},\r\n      {title: 'Guests', url: \"/guest-list\"},\r\n    ]\r\n  }),\r\n  mounted() {\r\n    if (localStorage.getItem(\"isAuthenticated\") &&\r\n        JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\r\n      this.authenticated = true\r\n    } else {\r\n      this.authenticated = false\r\n    }\r\n    if (this.authenticated === true) {\r\n      apiService.getGuestList().then(response => {\r\n        this.authenticated = true;\r\n      }).catch(error => {\r\n        if (error.response.status === 401) {\r\n          localStorage.clear();\r\n          localStorage.setItem(\"isAuthenticated\", false);\r\n          this.authenticated = false;\r\n        }\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    getUser() {\r\n      if (localStorage.getItem(\"isAuthenticated\") &&\r\n          JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true\r\n      ) {\r\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\r\n      }\r\n    },\r\n    logout() {\r\n//clear local storage items and set authenticated to false\r\n      localStorage.clear();\r\n      localStorage.setItem(\"isAuthenticated\", false);\r\n      this.authenticated = false;\r\n      window.location = \"/\";\r\n    },\r\n    login() {\r\n      router.push(\"/auth\");\r\n    },\r\n    home() {\r\n      window.location = \"/\";\r\n    },\r\n    register() {\r\n      router.push(\"/register\");\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-btn button {\r\n  padding: 7px 30px;\r\n  border: #dcb324 1px solid;\r\n  text-transform: uppercase;\r\n  background-color: #d78f00;\r\n  color: #1c212d;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n}\r\n\r\n.login-btn button:hover {\r\n  background-color: #ffffff;\r\n  border: #d78f00 1px solid;\r\n}\r\n</style>"],"mappings":";AAOA,OAAOA,MAAK,MAAO,cAAc;AACjC,SAAQC,UAAU,QAAO,mBAAmB;AAC5C,MAAMC,UAAS,GAAI,IAAID,UAAU,CAAC,CAAC;AACnC,eAAe;EACbE,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAEA,CAAA,MAAO;IACXC,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,CACJ;MAACC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAG,CAAC,EACzB;MAACD,KAAK,EAAE,QAAQ;MAAEC,GAAG,EAAE;IAAa,CAAC;EAEzC,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACR,IAAIC,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;MAChE,IAAI,CAACP,aAAY,GAAI,IAAG;IAC1B,OAAO;MACL,IAAI,CAACA,aAAY,GAAI,KAAI;IAC3B;IACA,IAAI,IAAI,CAACA,aAAY,KAAM,IAAI,EAAE;MAC/BH,UAAU,CAACa,YAAY,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QACzC,IAAI,CAACZ,aAAY,GAAI,IAAI;MAC3B,CAAC,CAAC,CAACa,KAAK,CAACC,KAAI,IAAK;QAChB,IAAIA,KAAK,CAACF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UACjCT,YAAY,CAACU,KAAK,CAAC,CAAC;UACpBV,YAAY,CAACW,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC;UAC9C,IAAI,CAACjB,aAAY,GAAI,KAAK;QAC5B;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EACDkB,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAIb,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAG,EAC7D;QACA,IAAI,CAACa,aAAY,GAAIZ,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MACnE;IACF,CAAC;IACDc,MAAMA,CAAA,EAAG;MACb;MACMf,YAAY,CAACU,KAAK,CAAC,CAAC;MACpBV,YAAY,CAACW,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC;MAC9C,IAAI,CAACjB,aAAY,GAAI,KAAK;MAC1BsB,MAAM,CAACC,QAAO,GAAI,GAAG;IACvB,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN7B,MAAM,CAAC8B,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACDC,IAAIA,CAAA,EAAG;MACLJ,MAAM,CAACC,QAAO,GAAI,GAAG;IACvB,CAAC;IACDI,QAAQA,CAAA,EAAG;MACThC,MAAM,CAAC8B,IAAI,CAAC,WAAW,CAAC;IAC1B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}